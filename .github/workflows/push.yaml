name: "Push"

on:
  workflow_dispatch:
  push:
    branches: ["**"]

jobs:
  push:
    name: "Push"
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      contents: write

    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      #- name: "Setup Python 3.12"
      #  uses: actions/setup-python@v5
      #  with:
      #    python-version: "3.12"

      - name: "Setup Node 22"
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: "Checkout highlight.js"
        uses: actions/checkout@v4
        with:
          repository: "highlightjs/highlight.js"
          ref: "11.11.1"
          path: "highlightjs"

      - name: "Build highlight.js"
        working-directory: "highlightjs"
        env:
          destination: "${{ github.workspace }}/app/src/main/assets/preview/dist"
        run: |
          ls -lAh .
          npm install
          node tools/build.js :common
          ls -lAh build
          mkdir -p ${{ env.destination }}
          cp build/highlight.min.js ${{ env.destination }}
          cp src/styles/stackoverflow-dark.css ${{ env.destination }}
          cp src/styles/stackoverflow-light.css ${{ env.destination }}
          ls -lAh ${{ env.destination }}

      - name: "Debug All"
        continue-on-error: true
        run: |
          ls -lAh .
          ls -lAhR app

      #- name: "Debug"
      #  continue-on-error: true
      #  run: |
      #    #/usr/bin/xcodebuild -version
      #    python -V
      #    python tst.py

      #      - name: "Debug event.json"
      #        run: |
      #          cat "${GITHUB_EVENT_PATH}"
      #
      #      - name: "Docker Test Action"
      #        uses: smashedr/docker-test-action@v1

      #- name: "Run Number"
      #  id: run
      #  run: |
      #    #exit $((RANDOM % 2))
      #    echo "number=$(echo $((50 + ${{ github.run_number }})))" >> "$GITHUB_OUTPUT"

      #- name: "Debug"
      #  run: |
      #    echo "GITHUB_WORKFLOW_REF: ${GITHUB_WORKFLOW_REF}"

      #    echo "github.event_name: ${{ github.event_name }}"
      #    echo "github.workflow: ${{ github.workflow }}"
      #    echo "github.ref_name: ${{ github.ref_name }}"
      #    echo "github.ref: ${{ github.ref }}"
      #    echo "pull_request.number: ${{ github.event.pull_request.number }}"

      #    echo "::group::env"
      #    env
      #    echo "::endgroup::"

      #    echo "::group::set"
      #    set -o
      #    echo "::endgroup::"

      #- name: "Anne O. Tate"
      #  if: ${{ !cancelled() }}
      #  run: |
      #    name=".github/workflows/push.yaml"
      #    path="$(readlink -f "${name}")"
      #    echo "path: ${path}"
      #    root=$(git rev-parse --show-toplevel)
      #    echo "root: ${root}"
      #    file="$(realpath --relative-to="${root}" ${path})"
      #    echo "file: ${file}"
      #    echo "::warning file=${file},line=55::You Fucked Up Chuck"

#
#
#- name: "Purge Cache Action"
#  uses: cssnr/cloudflare-purge-cache-action@v2
#  with:
#    domains: example.com,cssnr.com
#    dry_run: true
#    token: ${{ secrets.CLOUDFLARE_API_TOKEN }}

#- name: "Test Summary"
#  run: |
#    ls -lAh .github/workflows
#
#    results="$(ls -lAh .github/workflows/* | awk '{print $9" - "$5}')"
#    markdown='```text\n'"${results}"'\n```'
#    echo -e "${markdown}"
#    echo -e "${markdown}" >> $GITHUB_STEP_SUMMARY
