name: "Push"

on:
  workflow_dispatch:
  push:
    branches: ["**"]

# I am change

jobs:
  push:
    name: "Push"
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      contents: write

    steps:
      #- name: "Checkout"
      #  uses: actions/checkout@v4

      - name: "Checkout Configs"
        uses: actions/checkout@v4
        with:
          repository: cssnr/configs
          ref: master
          #path: .configs
          sparse-checkout: |
            labels/labeler.yaml
            labels/labels.yaml
          sparse-checkout-cone-mode: false

      - name: "Debug"
        continue-on-error: true
        run: |
          ls -lah .
          ls -lah labels

      #- name: "Algolia Crawler"
      #  uses: cssnr/algolia-crawler-action@updates
      #  with:
      #    crawler_id: af2f517b-d6f4-4a68-ad9e-93803cdd9ea6
      #    crawler_user_id: ${{ secrets.CRAWLER_USER_ID }}
      #    crawler_api_key: ${{ secrets.CRAWLER_API_KEY }}

      #- name: "Algolia Start Crawl"
      #  continue-on-error: true
      #  uses: cssnr/web-request-action@v1
      #  env:
      #    CRAWLER_ID: af2f517b-d6f4-4a68-ad9e-93803cdd9ea6
      #  with:
      #    url: https://crawler.algolia.com/api/1/crawlers/${{ env.CRAWLER_ID }}/reindex
      #    username: ${{ secrets.CRAWLER_USER_ID }}
      #    password: ${{ secrets.CRAWLER_API_KEY }}

  #second:
  #  name: "Second"
  #  runs-on: ubuntu-latest
  #  timeout-minutes: 5
  #  needs: [push]
  #  permissions:
  #    contents: write
  #
  #  steps:
  #    - name: "Checkout"
  #      uses: actions/checkout@v4
  #
  #    - name: "DO IT 1"
  #      id: tags
  #      if: ${{ needs.push.result == 'success' || needs.push.result != 'success2'  }}
  #      run: |
  #        echo "success"

  #- name: "1 - Docker Tags"
  #  id: tags
  #  uses: cssnr/docker-tags-action@master
  #  continue-on-error: true
  #  with:
  #    tags: |
  #      "0.0.1-bad1"
  #      ${{ true && 'pre' || '' }}
  #
  #- name: "1 - Debug Docker Tags"
  #  continue-on-error: true
  #  run: |
  #    echo -e "tags:\n${{ steps.tags.outputs.tags }}"
  #    echo -e "labels:\n${{ steps.tags.outputs.labels }}"
  #
  #- name: "2 - Docker Tags"
  #  id: tags2
  #  uses: cssnr/docker-tags-action@master
  #  continue-on-error: true
  #  with:
  #    tags: |
  #      "0.0.1"
  #      ${{ false && 'pre' || '' }}
  #
  #- name: "2 - Debug Docker Tags"
  #  continue-on-error: true
  #  run: |
  #    echo -e "tags:\n${{ steps.tags2.outputs.tags }}"
  #    echo -e "labels:\n${{ steps.tags2.outputs.labels }}"
  #
  #- name: "3 - Docker Tags"
  #  id: tags3
  #  uses: cssnr/docker-tags-action@master
  #  continue-on-error: true
  #  with:
  #    tags: |
  #      "0.0.2-rip1"
  #      ""
  #
  #- name: "3 - Debug Docker Tags"
  #  continue-on-error: true
  #  run: |
  #    echo -e "tags:\n${{ steps.tags3.outputs.tags }}"
  #    echo -e "labels:\n${{ steps.tags3.outputs.labels }}"

  #- name: "Setup Python 3.12"
  #  uses: actions/setup-python@v5
  #  with:
  #    python-version: "3.12"

  #- name: "Setup Node 22"
  #  uses: actions/setup-node@v4
  #  with:
  #    node-version: 22

  #- name: "Checkout highlight.js"
  #  uses: actions/checkout@v4
  #  with:
  #    repository: "highlightjs/highlight.js"
  #    ref: "11.11.1"
  #    path: ".github/highlightjs"

  #- name: "Build highlight.js"
  #  working-directory: ".github/scripts"
  #  env:
  #    destination: "${{ github.workspace }}/app/src/main/assets/preview/dist"
  #  run: |
  #    bash prepare.sh
  #
  #- name: "Debug"
  #  continue-on-error: true
  #  run: |
  #    ls -lAh ../
  #    ls -lAh .
  #    ls -lAhR app

  #      - name: "Debug event.json"
  #        run: |
  #          cat "${GITHUB_EVENT_PATH}"
  #
  #      - name: "Docker Test Action"
  #        uses: smashedr/docker-test-action@v1

  #- name: "Run Number"
  #  id: run
  #  run: |
  #    #exit $((RANDOM % 2))
  #    echo "number=$(echo $((50 + ${{ github.run_number }})))" >> "$GITHUB_OUTPUT"

  #- name: "Debug"
  #  run: |
  #    echo "GITHUB_WORKFLOW_REF: ${GITHUB_WORKFLOW_REF}"

  #    echo "github.event_name: ${{ github.event_name }}"
  #    echo "github.workflow: ${{ github.workflow }}"
  #    echo "github.ref_name: ${{ github.ref_name }}"
  #    echo "github.ref: ${{ github.ref }}"
  #    echo "pull_request.number: ${{ github.event.pull_request.number }}"

  #    echo "::group::env"
  #    env
  #    echo "::endgroup::"

  #    echo "::group::set"
  #    set -o
  #    echo "::endgroup::"

  #- name: "Anne O. Tate"
  #  if: ${{ !cancelled() }}
  #  run: |
  #    name=".github/workflows/push.yaml"
  #    path="$(readlink -f "${name}")"
  #    echo "path: ${path}"
  #    root=$(git rev-parse --show-toplevel)
  #    echo "root: ${root}"
  #    file="$(realpath --relative-to="${root}" ${path})"
  #    echo "file: ${file}"
  #    echo "::warning file=${file},line=55::You Fucked Up Chuck"

#
#
#- name: "Purge Cache Action"
#  uses: cssnr/cloudflare-purge-cache-action@v2
#  with:
#    domains: example.com,cssnr.com
#    dry_run: true
#    token: ${{ secrets.CLOUDFLARE_API_TOKEN }}

#- name: "Test Summary"
#  run: |
#    ls -lAh .github/workflows
#
#    results="$(ls -lAh .github/workflows/* | awk '{print $9" - "$5}')"
#    markdown='```text\n'"${results}"'\n```'
#    echo -e "${markdown}"
#    echo -e "${markdown}" >> $GITHUB_STEP_SUMMARY
