name: "Extra"

on:
  push:
  #schedule:
  #  - cron: "*/10 * * * *"
  workflow_dispatch:
    inputs:
      build:
        description: "Run Build"
        type: boolean
        default: true
      deploy:
        description: "Run Deploy"
        type: boolean
        default: true
      cleanup:
        description: "Run Cleanup"
        type: boolean
        default: true
      env:
        description: "Environment to Deploy"
        required: true
        default: "dev"
        type: choice
        options:
          - dev
          - prod

env:
  build: ${{ github.event_name == 'push' && true || inputs.build }}
  deploy: ${{ github.event_name == 'push' && true || inputs.deploy }}

jobs:
  extra:
    name: "Extra"
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      contents: write

    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      #- name: "Debug"
      #  run: |
      #    echo github.event_name: ${{ github.event_name }}
      #
      #    echo inputs.build: ${{ inputs.build }}
      #    echo env.build: ${{ env.build }}
      #    echo inputs.deploy: ${{ inputs.deploy }}
      #    echo env.deploy: ${{ env.deploy }}
      #
      #    echo inputs.env: ${{ inputs.env }}

      #- name: "Build"
      #  if: ${{ env.build == 'true' }}
      #  run: |
      #    echo yes

      #- name: "Deploy"
      #  if: ${{ env.deploy == 'true' }}
      #  run: |
      #    echo yes

      #- name: "SSH Key"
      #  run: |
      #    set -e
      #    SSH_DIR=~/.ssh
      #    echo "SSH_DIR: ${SSH_DIR}"
      #    mkdir -p "${SSH_DIR}"
      #    chmod 0700 "${SSH_DIR}"
      #    ssh-keyscan -p "22" -H "github.com" >> "${SSH_DIR}/known_hosts"
      #    echo "${{ secrets.SSH_KEY }}" > "${SSH_DIR}/id_rsa"
      #    chmod 0600 "${SSH_DIR}/id_rsa"
      #    eval "$(ssh-agent -s)"
      #    ssh-add "${SSH_DIR}/id_rsa"

      - name: "Debug"
        run: |
          SSH_DIR=~/.ssh
          echo ~/.ssh
          echo "SSH_DIR: ${SSH_DIR}"
          echo "HOME: ${HOME}"

      - name: "Add SSH Key"
        run: |
          set -e
          SSH_DIR="${HOME}/.ssh"
          mkdir -p "${SSH_DIR}"
          chmod 0700 "${SSH_DIR}"
          ssh-keyscan -p "22" -H "github.com" >> "${SSH_DIR}/known_hosts"
          echo "${{ secrets.SSH_KEY }}" > "${SSH_DIR}/id_rsa"
          chmod 0600 "${SSH_DIR}/id_rsa"
          eval "$(ssh-agent -s)"
          ssh-add "${SSH_DIR}/id_rsa"

      - name: "Test"
        run: |
          set -e
          git clone git@github.com:smashedr/test-private.git
          ls -lah test-private

      #- name: "Always"
      #  if: ${{ always() && failure() && github.event_name == 'schedule' }}
      #  run: |
      #    echo YOU FUCKED UP CHUCK!

      #- name: "Always"
      #  if: ${{ always() }}
      #  run: |
      #    echo github.event_name: ${{ github.event_name }}
      #    echo steps.test.outcome: ${{ steps.test.outcome }}

      #- name: "Schedule"
      #  if: ${{ always() && github.event_name == 'schedule' }}
      #  run: |
      #    echo steps.test.outcome: ${{ steps.test.outcome }}

      #- name: "Schedule and Failure"
      #  if: ${{ always() && github.event_name == 'schedule' && steps.test.outcome == 'failure' }}
      #  run: |
      #    echo yes

      #- name: "Discord Notification"
      #  uses: sarisia/actions-status-discord@v1
      #  #if: ${{ always() && steps.test.outcome == 'failure' }}
      #  if: ${{ always() && github.event_name == 'schedule' && steps.test.outcome == 'failure' }}
      #  with:
      #    webhook: ${{ secrets.DISCORD_WEBHOOK }}
