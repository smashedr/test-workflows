name: "Release"

on:
  workflow_dispatch:
  release:
    types: [published]

jobs:
  release:
    name: "Release"
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      contents: write

    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Debug event.json"
        run: |
          cat "${GITHUB_EVENT_PATH}"

      - name: "Debug"
        if: ${{ !github.event.act }}
        continue-on-error: true
        run: |
          echo versionCode: ${{ github.run_number }}
          echo versionName: ${{ github.ref_name }}

      #- name: "Docker Metadata"
      #  id: meta
      #  uses: docker/metadata-action@v5
      #  with:
      #    images: "ghcr.io/${{ github.repository }}"
      #    #flavor: |
      #    #  latest=auto
      #    #  prefix=v,onlatest=false
      #- name: "Echo Metadata"
      #  run: |
      #    echo "tags: ${{ steps.meta.outputs.tags }}"
      #    echo "labels: ${{ steps.meta.outputs.labels }}"
      #    echo "annotations: ${{ steps.meta.outputs.annotations }}"

      #- name: "Update Version Tags"
      #  id: tags
      #  uses: cssnr/update-version-tags-action@master
      #- name: "Echo Tags"
      #  run: |
      #    echo "tags: ${{ steps.tags.outputs.tags }}"
      #- name: "Update Release Notes Action"
      #  uses: smashedr/update-release-notes-action@master
      #  with:
      #    tags: "v1,v1.0"
      #    #delimiter: "--"
      #    #remove: true
      #    location: tail

      #- name: "Update Release Notes"
      #  env:
      #    GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #  run: |
      #    echo tags: ${{ steps.tags.outputs.tags }}
      #
      #    body=$(gh release view --json body --jq '.body')
      #    echo "body:"
      #    echo "${body}"
      #
      #    if [[ body == *"----"* ]];then
      #      head=$(echo "${body}" | awk "/----/{exit} {print}")
      #      tail=$(echo "${body}" | sed -n '/----/,$p')
      #    else
      #      head=""
      #      tail="${body}"
      #    fi
      #
      #    echo "head:"
      #    echo "${head}"
      #
      #    echo "tail:"
      #    echo "${tail}"

      #- name: "Upload to Release"
      #  if: ${{ github.event_name == 'release' }}
      #  uses: svenstaro/upload-release-action@v2
      #  with:
      #    overwrite: true
      #    #file_glob: true
      #    #file: .github/workflows/*
      #    file: README.md

      - name: "VirusTotal"
        uses: cssnr/virustotal-action@updates
        with:
          vt_api_key: ${{ secrets.VT_API_KEY }}
          release_heading: "### Scan Results"
          collapsed: "false"
          file_name: "id"
