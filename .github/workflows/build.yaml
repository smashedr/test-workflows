name: "Build"

on:
  workflow_dispatch:
    inputs:
      tags:
        description: "Extra Tags: comma,separated"
        required: false
      dev:
        description: "Development Build"
        type: boolean
        default: true
  release:
    types: [published]

jobs:
  build:
    name: "Build"
    runs-on: ubuntu-latest
    timeout-minutes: 10

    permissions:
      contents: write
      packages: write

    steps:
      - name: "Checkout"
        uses: actions/checkout@v5

      - name: "Debug 1"
        continue-on-error: true
        run: |
          echo "inputs.dev: ${{ inputs.dev }}"
          echo "inputs.tags: ${{ inputs.tags }}"
          echo "github.ref_name: ${{ github.ref_name }}"

      - name: "Setup Buildx"
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64,linux/arm64

      - name: "Update Version Tags"
        if: ${{ inputs.dev != true }}
        id: version
        uses: cssnr/update-version-tags-action@v1
        with:
          tags: ${{ inputs.tags }}
          prefix: ""

      - name: "Debug 2"
        continue-on-error: true
        run: |
          echo "inputs.dev: ${{ inputs.dev }}"
          echo "inputs.tags: ${{ inputs.tags }}"
          echo "github.ref_name: ${{ github.ref_name }}"
          echo "tags: ${{ inputs.dev == true && 'dev' || steps.version.outputs.tags }}"

      - name: "Debug Version Tags"
        if: ${{ inputs.dev != true }}
        continue-on-error: true
        run: |
          echo "github.ref_name: ${{ github.ref_name }}"
          echo "steps.version.outputs.tags: ${{ steps.version.outputs.tags }}"

      - name: "Generate Docker Tags"
        id: tags
        uses: cssnr/docker-tags-action@v1
        with:
          images: "ghcr.io/${{ github.repository }}"
          tags: ${{ inputs.dev == true && 'dev' || steps.version.outputs.tags }}

      - name: "Debug Docker Tags"
        continue-on-error: true
        run: |
          echo "github.ref_name: ${{ github.ref_name }}"
          echo "tags: ${{ steps.tags.outputs.tags }}"
          echo "labels: ${{ steps.tags.outputs.labels }}"
          echo "annotations: ${{ steps.tags.outputs.annotations }}"
